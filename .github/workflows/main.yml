name: Windows Release

on:
  push:
    branches:
      - 'master'
      - 'Stable*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: desktop
          arch: win64_msvc2019_64
          dir: ${{ runner.temp }}
          modules: qtcharts
          setup-python: false

      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\
          retry-times: 10

      - name: Unzip JOM
        run: 7z x ${{ runner.temp }}/jom.zip -o${{ runner.temp }}/jom

      - name: Download Gstreamer
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-msvc-x86_64-1.18.1.msi
          target: ${{ runner.temp }}\
          retry-times: 10

      - name: Download Gstreamer dev
        uses: suisei-cn/actions-download-file@v1.4.0
        with:
          url: https://s3-us-west-2.amazonaws.com/qgroundcontrol/dependencies/gstreamer-1.0-devel-msvc-x86_64-1.18.1.msi
          target: ${{ runner.temp }}\
          retry-times: 10

      - name: Install Gstreamer
        run: |
          msiexec /i ${{ runner.temp }}/gstreamer-1.0-msvc-x86_64-1.18.1.msi /passive ADDLOCAL=ALL
          msiexec /i ${{ runner.temp }}/gstreamer-1.0-devel-msvc-x86_64-1.18.1.msi /passive ADDLOCAL=ALL

      - name: Create build directory
        run: mkdir ${{ runner.temp }}/shadow_build_dir

      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64

      - name: Build
        run: |
          qmake -r ${{ github.workspace }}/qgroundcontrol.pro CONFIG+=installer CONFIG+=${{ env.BUILD_TYPE }}
          "${{ runner.temp }}/jom/jom" -j2

      - name: Save installer artifact
        run: |
          mkdir -p ${{ github.workspace }}/artifacts
          copy ${{ runner.temp }}/shadow_build_dir/staging/${{ env.ARTIFACT }} ${{ github.workspace }}/artifacts/

      - name: Save PDB artifact
        run: |
          mkdir -p ${{ github.workspace }}/artifacts
          copy ${{ runner.temp }}/shadow_build_dir/staging/qgroundcontrol.pdb ${{ github.workspace }}/artifacts/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.GIT_BRANCH_NAME }}
          release_name: Release ${{ env.GIT_BRANCH_NAME }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/artifacts/${{ env.ARTIFACT }}
          asset_name: ${{ env.ARTIFACT }}
          asset_content_type: application/octet-stream
